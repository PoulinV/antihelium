#ifndef BESSEL_PRELIM_H
#define BESSEL_PRELIM_H

/**********************************************************************************************************************************************************************************************************/
/**********************************************************************************************************************************************************************************************************/

#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <time.h>
#include <locale.h>

#include "COMMON.h"
#include "STRUCTURES.h"

#include "besselj0_next.h"
#include "besselj1_next.h"



/**********************************************************************************************************************************************************************************************************/
/**********************************************************************************************************************************************************************************************************/

//	DECLARATION DES CONSTANTES

#define NINT_PRODUCTION 50000
/* Nombre de pas dans l'integration de la fonction production */

/**********************************************************************************************************************************************************************************************************/
/**********************************************************************************************************************************************************************************************************/

//	DECLARATION DES FONCTIONS

void bessel_preliminary_write_file(double alpha_i[NDIM+1], struct Structure_Nuclei* pt_Proton, struct Structure_Nuclei* pt_Helium);
void bessel_preliminary_read_file (double alpha_i[NDIM+1], struct Structure_Nuclei* pt_Proton, struct Structure_Nuclei* pt_Helium);

void search_for_zero(double alpha_i[NDIM+1]);
void search(double z1,double z2,double *zero);
void production(double alpha_i[NDIM+1], struct Structure_Nuclei* pt_Nuclei);
double f_PSRD(double u);

/**********************************************************************************************************************************************************************************************************/
/**********************************************************************************************************************************************************************************************************/
#endif